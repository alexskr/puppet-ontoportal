#!/usr/bin/env bash
# -----------------------------------------------------------------------------
# Part of the OntoPortal Virtual Appliance Project
# https://ontoportal.org
#
# Author: Alex Skrenchuk alex.skrenchuk@stanford.edu
# Copyright (c) 2025 Stanford University and the OntoPortal Alliance
# SPDX-License-Identifier: Apache-2.0
#
# Description
# Safe CLI for querying EC2 instance metadata and user-data from shell scripts
# Usage: ec2meta <metadata-path>
# Example: ec2meta instance-id → i-0abc123...
# -----------------------------------------------------------------------------
set -euo pipefail

METADATA_IP="169.254.169.254"
TIMEOUT=1

usage() {
  echo "Usage: $(basename "$0") <metadata-path>" >&2
  echo "Example: $(basename "$0") public-hostname" >&2
  exit 1
}

if [[ $# -ne 1 ]]; then
  usage
fi

PATH_TO_FETCH="$1"

# --- Fetch token ---
get_imds_token() {
  curl -s -o /tmp/imds_token_body --write-out "%{http_code}" \
    --connect-timeout $TIMEOUT --max-time $TIMEOUT -X PUT \
    -H "X-aws-ec2-metadata-token-ttl-seconds: 60" \
    "http://${METADATA_IP}/latest/api/token"
}

# --- Fetch metadata using token ---
fetch_metadata() {
  local path=$1
  local token=$2
  local url="http://${METADATA_IP}/latest/meta-data/${path}"

  http_code=$(curl -s -w "%{http_code}" -o /tmp/imds_body \
    --connect-timeout $TIMEOUT --max-time $TIMEOUT \
    -H "X-aws-ec2-metadata-token: $token" "$url")

  if [[ "$http_code" == "200" ]]; then
    cat /tmp/imds_body
    return 0
  elif [[ "$http_code" == "404" ]]; then
    echo "❌ Metadata path not found: $path" >&2
  else
    echo "❌ Metadata fetch failed: HTTP $http_code for path: $path" >&2
  fi

  return 1
}

# --- Main ---
token_http_code=$(get_imds_token)
if [[ "$token_http_code" != "200" ]]; then
  echo "⚠️ Metadata service not available (or not running on EC2)." >&2
  exit 1
fi

token=$(< /tmp/imds_token_body)
fetch_metadata "$PATH_TO_FETCH" "$token"
